var _ = require('lodash');
var BaseModel = require("./../../../baseModel");

function thisModule() {
    var cultureCodeSetter = function (value) {
        var culture = {};
        culture.language = value.substring(0, 2).toLowerCase();
        culture.region = value.substring(3, 5).toLowerCase();
        return {'culture.language': culture.language, 'culture.region': culture.region};
    };

    var model = BaseModel.extend({
            data: {
                /** userId: User-Id generated by device */
                userId: {
                    type: String,
                    maxLength: 32,
                    minLength: 0,
                    public: true,
                    index: true,
                    unique: true,
                    sparse: true,
                    convert: 'upper'
                },
                culture: {
                    language: {
                        type: String,
                        minLength: 2,
                        maxLength: 2,
                        match: /[a-zA-Z]{2}/i,
                        required: true,
                        public: {set: false, get: true}
                    },
                    region: {
                        type: String,
                        minLength: 2,
                        maxLength: 2,
                        match: /[a-zA-Z]{2}/i,
                        required: true,
                        public: {set: false, get: true}
                    },
                    code: {
                        type: String,
                        minLength: 5,
                        maxLength: 5,
                        match: /[a-zA-Z]{2}-[a-zA-Z]{2}/i,
                        required: true,
                        public: {set: true, get: false},
                        virtual: cultureCodeSetter,
                        default: 'de-de'
                    }
                },
                date: {
                    type: Date,
                    default: Date.now()
                },
                appversion: {
                    type: String,
                    required: true,
                    max: 20,
                    min: 1,
                    allow: [2, 3, 19]
                }
            },
            compoundIndexes: [
                {
                    fields: ["userId", "culture.region", "culture.language"],
                    unique: true,
                    sparse: true
                },
                {
                    fields: ["appversion", "date"]
                }
            ]
        },
        {
            disabled: false, // Enable /disable controller
            identity: 'TestModel', // Controller name used in routes, policies and followups
            version: '1.0', // Version number of service
            created: '2014-01-09T19:00:00', // Creation date of controller
            modified: '2017-01-11T21:00:00', // Last modified date of controller
            group: 'mia-js-core', // Group this service to a origin,
            collectionName: 'testModel'
        });

    return model;
};

module.exports = thisModule();